"use strict";(self.webpackChunkbedwars_docs=self.webpackChunkbedwars_docs||[]).push([[957],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),m=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=m(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=m(n),u=a,f=p["".concat(s,".").concat(u)]||p[u]||c[u]||r;return n?o.createElement(f,i(i({ref:t},d),{},{components:n})):o.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var m=2;m<r;m++)i[m]=n[m];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4772:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:3},i="Custom Commands",l={unversionedId:"bedwars1058-discord/custom-commands",id:"bedwars1058-discord/custom-commands",title:"Custom Commands",description:"The customCommands.yml file allows you to create custom commands for your Discord bot, complete with customizable embedded messages. Below is the structure of the file and an explanation of each option:",source:"@site/docs/bedwars1058-discord/custom-commands.md",sourceDirName:"bedwars1058-discord",slug:"/bedwars1058-discord/custom-commands",permalink:"/docs/bedwars1058-discord/custom-commands",draft:!1,editUrl:"https://github.com/IUNGO-INFO/BedWars1058-Discord/docs/bedwars1058-discord/custom-commands.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Setup Plugin",permalink:"/docs/bedwars1058-discord/plugin-setup"},next:{title:"Commands & Permissions",permalink:"/docs/bedwars1058-discord/commands-and-permissions"}},s={},m=[{value:"Config Breakdown",id:"config-breakdown",level:3},{value:"prefix",id:"prefix",level:3},{value:"commands",id:"commands",level:3}],d={toc:m},p="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-commands"},"Custom Commands"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"customCommands.yml")," file allows you to create custom commands for your Discord bot, complete with customizable embedded messages. Below is the structure of the file and an explanation of each option:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="customCommands.yml"',title:'"customCommands.yml"'},'prefix: "!"\ncommands:\n  - name: rules\n    description: Custom Rules Command\n    embed:\n      title: Rules\n      description: Please follow the rules\n      color: 16711680\n      fields:\n        - name: "[1]"\n          value: No bad words :(\n          inline: true\n        - name: "[2]"\n          value: No cheating\n          inline: true\n        - name: "[3]"\n          value: No fun!\n          inline: true\n  - name: custom2\n    description: Custom Command 2\n    embed:\n      title: Example\n      description: Example of using placeholders %bw1058_player_level%\n      color: 65280\n      fields:\n        - name: "Allowed Flight?"\n          value: "%player_allow_flight%"\n          inline: true\n        - name: "Level"\n          value: "%bw1058_player_level%"\n          inline: true\n        - name: "Ping"\n          value: "%player_ping%"\n          inline: true\n\n')),(0,a.kt)("h3",{id:"config-breakdown"},"Config Breakdown"),(0,a.kt)("h3",{id:"prefix"},"prefix"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix")," option is defined as the character that should be used for the bot to understand a command is being used. For example, if the prefix is set to ",(0,a.kt)("inlineCode",{parentName:"p"},'"!"'),", the bot will recognize commands starting with ",(0,a.kt)("inlineCode",{parentName:"p"},'"!"'),"."),(0,a.kt)("h3",{id:"commands"},"commands"),(0,a.kt)("p",null,"This section allows you to define custom commands for your bot. Each command is defined as a separate item in the list. You can create multiple custom commands by adding more items to the list."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"name:")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," option is the name of the command, for example, ",(0,a.kt)("inlineCode",{parentName:"p"},'"rules"'),'. When a user sends the command with the specified prefix (e.g., "!rules"), the bot will execute the corresponding command.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"description:")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"description")," option provides a brief description of the custom command.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"embed:")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"embed")," section is where you can customize the appearance of the bot's response using an embedded message."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"title:")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"title")," option will be the title of the embedded message.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"description:")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"description")," option will be the description text shown on the embedded message.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"color:")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"color")," option sets the color of the embedded message. The color is represented in hexadecimal format.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"fields:")),(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"fields")," array allows you to add as many fields as defined in the config. Each field has a name, value, and an optional ",(0,a.kt)("inlineCode",{parentName:"p"},"inline")," property. The ",(0,a.kt)("inlineCode",{parentName:"p"},"inline")," property determines whether the field should be displayed inline with other fields or on a new line."))))),(0,a.kt)("p",null,"In the example ",(0,a.kt)("inlineCode",{parentName:"p"},"customCommands.yml"),', there are two custom commands: "rules" and "custom2". Each command is followed by its respective embedded message settings.'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'The "rules" command displays rules in an embedded message with a red color and three fields.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'The "custom2" command provides an example of using PlaceholderAPI placeholders in the embedded message. However, the user must be linked to Minecraft using the ',(0,a.kt)("inlineCode",{parentName:"p"},"/link")," command on Discord for this feature to work."))),(0,a.kt)("p",null,"You can add more custom commands following the same structure. Save the ",(0,a.kt)("inlineCode",{parentName:"p"},"customCommands.yml")," file and restart your server. Your Discord bot should now be able to recognize and execute the custom commands according to the configurations provided."))}c.isMDXComponent=!0}}]);